if [ "$(arch)" = "i386" ]; then
  echo "Using i386"
  eval "$(/usr/local/bin/brew shellenv)"
else
  echo "Using arm64"
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

alias mzsh="arch -arm64 zsh"
alias izsh="arch -x86_64 zsh"

 if [ "$(arch)" = "i386" ]; then
   alias brew="env PATH=${PATH//$(pyenv root)\/shims:/} /usr/local/homebrew/bin/brew"
 else
   alias brew="env PATH=${PATH//$(pyenv root)\/shims:/} /opt/homebrew/bin/brew"
 fi

export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(git z zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

alias brewup='brew update; brew upgrade; brew prune; brew cleanup; brew doctor'

# Direnv
eval "$(direnv hook zsh)"
export EDITOR="nvim"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

export PATH="$HOME/.local/bin:$PATH"

# GCloud CLI
export PATH="$HOME/.gcloud/bin:$PATH"

# PostgreSQL
export PGUSER="postgres"
export PGDATA="/opt/homebrew/var/postgres"

export GOPATH="$HOME/go"; export GOROOT="$HOME/.go"; export PATH="$GOPATH/bin:$PATH"; # g-install: do NOT edit, see https://github.com/stefanmaric/g

export USE_GKE_GCLOUD_AUTH_PLUGIN=True

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

ZSH_CASE=smart
zstyle ':completion:*' menu select

# Misc
alias del='rm -rf'
alias ls='logo-ls -X -D'
alias lsa='logo-ls -X -D -a'
alias lls='logo-ls'

# NPM
alias ni='npm install'
alias ns='npm start'
alias nt='npm test'
alias nr='npm run'
alias nig='npm install -g'
alias nid='npm install --save-dev'

# Make
alias m='make'
alias ms='make start'
alias mt='make test'

# NVIM
alias vim="nvim"

# Kraken Bastions
alias bastion-qa="gcloud beta compute ssh wpro-bastion --project wpro-kraken-qa --zone us-west2-a --tunnel-through-iap --ssh-flag='-NL 12343:127.0.0.1:8888'"
alias bastion-prod="gcloud beta compute ssh wpro-bastion --project wpro-kraken-314320 --zone us-west2-a --tunnel-through-iap --ssh-flag='-NL 12344:127.0.0.1:8888'"

# Kraken K8s
alias kube-qa="KUBECONFIG=~/.config/kube/kraken-qa-connect.yaml HTTPS_PROXY=127.0.0.1:12343 kubectl -n airflow"
alias helm-qa="KUBECONFIG=~/.config/kube/kraken-qa-connect.yaml HTTPS_PROXY=127.0.0.1:12343 helm -n airflow"
alias kube-prod="KUBECONFIG=~/.config/kube/kraken-prod-connect.yaml HTTPS_PROXY=127.0.0.1:12344 kubectl -n airflow"
alias helm-prod="KUBECONFIG=~/.config/kube/kraken-prod-connect.yaml HTTPS_PROXY=127.0.0.1:12344 helm -n airflow"

